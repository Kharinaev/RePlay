workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

cache:
  paths:
    - ./venv/

stages:
  - build
  - code_quality
  - docs
  - test

build-job:
  stage: build
  script:
    - python3 --version
    - rm -rf .venv/
    - python3 -m venv venv
    - source ./venv/bin/activate
    - pip install --upgrade pip wheel poetry
    - printf "yes" | poetry cache clear pypi --all
#    - poetry update
    - poetry install

pylint-job:
  stage: code_quality
  script:
    - source ./venv/bin/activate
    - pylint --rcfile=.pylintrc replay

pycodestyle-job:
  stage: code_quality
  script:
    - source ./venv/bin/activate
    - pycodestyle --ignore=E203,E231,E501,W503,W605 --max-doc-length=160 replay tests

sphinx-job:
  stage: docs
  script:
    - source ./venv/bin/activate
    - cd docs
    - make clean html

test-job:
  stage: test
  script:
    - source ./venv/bin/activate
    - pytest --cov=replay --cov-report=term-missing --doctest-modules replay --cov-fail-under=93 tests
